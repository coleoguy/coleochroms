for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
rm(i, trees)
tip.states <- data[, 2]
names(tip.states) <- row.names(data)
foo2 <- make.simmap(new.trees, tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0005,0.0005,.999))
plotSimmap(foo2[[1]])
plotSimmap(foo2[[2]])
plotSimmap(foo2[[3]])
plotSimmap(foo2[[4]])
plotSimmap(foo2[[5]])
plotSimmap(foo2[[6]])
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0,0,1))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0001,0.0001,0.0008))
install.packages("phytools")
install.packages(c("ape", "corHMM", "MASS", "OUwie", "paleotree"))
install.packages(c("taxize", "TreeSim"))
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
data <- read.csv("all.csv", as.is=T)
# remove NA data & add row names
row.names(data) <- data[, 1]
data <- data[, 2:3]
# read the tree
library(ape)
trees <- read.nexus("../../../data/trees.nexus")
# make a dataset in the make.simmap format for the focal taxa
library(geiger)
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
# now clean up
rm(i, trees)
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
data <- read.csv("pol.only.csv", as.is=T)
row.names(data) <- data[, 1]
data <- data[, 2:3]
trees <- read.nexus("../../../data/trees.nexus")
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
rm(i, trees)
tip.states <- data[, 2]
names(tip.states) <- row.names(data)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0,0,1))
library(phytools)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0,0,1))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(.1,.1,.8))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(.01,.01,.98))
plotSimmap(foo2)
View(data)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0001,0.0001,0.9998))
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
data <- read.csv("ade.only.csv", as.is=T)
row.names(data) <- data[, 1]
data <- data[, 2:3]
trees <- read.nexus("../../../data/trees.nexus")
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
rm(i, trees)
tip.states <- data[, 2]
names(tip.states) <- row.names(data)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0001,0.0001,0.9998))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.00001,0.00001,0.99998))
plotSimmap(foo2)
tip.states
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0000001,0.0000001,0.9999998))
plotSimmap(foo2)
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.0000001,0.9999998,0.0000001))
plotSimmap(foo2)
plotSimmap(foo2)
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0.9999998,0.0000001, 0.0000001))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(0,0, 1))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = "ARD", nsim = 1, pi=c(1,0, 0))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,0,1,0,0,2,0,0)), nsim = 1, pi=c(0.01,0.01, 0.98))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,0,1,0,0,2,0,0),3), nsim = 1, pi=c(0.01,0.01, 0.98))
plotSimmap(foo2)
tip.states
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,0,1,0,0,2,0,0),3), nsim = 1, pi=c(0.98,0.01, 0.98))
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,0,1,0,0,2,0,0),3), nsim = 1, pi=c(1,1, 1000))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,0,1,0,0,2,0,0),3), nsim = 1, pi=c(1,1000, 1))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[1]], tip.states, maxit=200000, model = matrix(c(0,0,1,0,0,2,0,0,0),3), nsim = 1, pi=c(1,1, 1000))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[6]], tip.states, maxit=200000, model = matrix(c(0,0,1,0,0,2,0,0,0),3), nsim = 1, pi=c(1,1, 1000))
plotSimmap(foo2)
foo2 <- make.simmap(new.trees[[9]], tip.states, maxit=200000, model = matrix(c(0,0,1,0,0,2,0,0,0),3), nsim = 1, pi=c(1,1, 1000))
plotSimmap(foo2)
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
library(geiger)
library(phytools)
# first adephaga
data <- read.csv("ade.only.csv", as.is=T)
row.names(data) <- data[, 1]
data <- data[, 2:3]
trees <- read.nexus("../../../data/trees.nexus")
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
rm(i, trees)
tip.states <- data[, 2]
names(tip.states) <- row.names(data)
foo2 <- make.simmap(new.trees, tip.states, maxit=200000, model = matrix(c(0,0,1,0,0,2,0,0,0),3), nsim = 1, pi=c(1,1, 10000))
##### support for the ard model p.val = .0312#####
chrom.num <- as.numeric(data[, 1])
names(chrom.num) <- row.names(data)
result <- list()
for(i in 1:100){
result[[i]] <- brownie.lite(foo2[[i]], chrom.num, maxit=200000, test="chisq", se=NULL)
print(i)
}
model1 <- model2 <- vector()
for(i in 1:100){
model1[i] <- result[[i]]$logL1
model2[i] <- result[[i]]$logL.multiple
}
mean(model1)
#[1] -399.9665
mean(model2)
all.models <- vector()
for(i in 1:100){
all.models[i] <- 1-pchisq((2*(-mean(model1[i]) + mean(model2[i]))), 1)
}
mean(all.models)
max(all.models)
bar1 <- bar2 <- matrix(,100,3)
bar3<- vector()
for(i in 1:100){
bar1[i, ] <- result[[i]]$sig2.multiple
bar2[i, ] <- sqrt(diag(result[[i]]$vcv.multiple))
bar3[i] <- result[[i]]$convergence
}
colMeans(bar1[, ])
colMeans(bar2[, ])
result[[i]]$sig2.multiple
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
data <- read.csv("pol.only.csv", as.is=T)
row.names(data) <- data[, 1]
data <- data[, 2:3]
trees <- read.nexus("../../../data/trees.nexus")
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
rm(i, trees)
tip.states <- data[, 2]
names(tip.states) <- row.names(data)
foo2 <- make.simmap(new.trees, tip.states, maxit=200000, model = matrix(c(0,0,1,0,0,2,0,0,0),3), nsim = 1, pi=c(1,1, 10000))
##### support for the ard model p.val = .0312#####
chrom.num <- as.numeric(data[, 1])
names(chrom.num) <- row.names(data)
result <- list()
for(i in 1:100){
result[[i]] <- brownie.lite(foo1[[i]], chrom.num, maxit=200000, test="chisq", se=NULL)
print(i)
}
model1 <- model2 <- vector()
for(i in 1:100){
model1[i] <- result[[i]]$logL1
model2[i] <- result[[i]]$logL.multiple
}
mean(model1)
chrom.num <- as.numeric(data[, 1])
names(chrom.num) <- row.names(data)
result <- list()
for(i in 1:100){
result[[i]] <- brownie.lite(foo2[[i]], chrom.num, maxit=200000, test="chisq", se=NULL)
print(i)
}
model1 <- model2 <- vector()
for(i in 1:100){
model1[i] <- result[[i]]$logL1
model2[i] <- result[[i]]$logL.multiple
}
mean(model1)
#[1] -428.5342
mean(model2)
all.models <- vector()
for(i in 1:100){
all.models[i] <- 1-pchisq((2*(-mean(model1[i]) + mean(model2[i]))), 1)
}
max(all.models)
bar1 <- bar2 <- matrix(,100,3)
for(i in 1:100){
bar1[i, ] <- result[[i]]$sig2.multiple
bar2[i, ] <- sqrt(diag(result[[i]]$vcv.multiple))
}
colMeans(bar1)
colMeans(bar2)
data <- read.csv("genera.sigsq.csv")
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis")
data <- read.csv("genera.sigsq.csv")
colMeans(data)
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis")
results <- read.csv("genera.sigsq.csv", header=T, as.is=T, row.names=1)
View(results)
View(results)
colnames(results) <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
View(results)
results.lb <- read.csv("genera.sigsq.lb.csv", header=T, as.is=T, row.names=1)
colnames(results.lb) <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results.ub <- read.csv("genera.sigsq.ub.csv", header=T, as.is=T, row.names=1)
colnames(results.lb) <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
library(plotrix)
gen.means <- colMeans(results)
gen.highs <- colMeans(results.ub)
gen.lows <- colMeans(results.lb)
gen.order <- c(7,9,10,6,12,3,5,1,4,8,11,2)
par(mar=c(10,5,5,10))
cols <- c("red","#7a0177","blue")
cats <- c(3,2,2,1,1,1,1,3,3,3,2,1)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,16), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
abline(v=7.5, lty=2)
text(x=4, y=1.55, labels="Polyphaga")
text(x=10, y=1.55, labels="Adephaga")
text(x=4, y=50, labels="Polyphaga")
text(x=10, y=50, labels="Adephaga")
par(xpd=TRUE)
points(x=16,y=1.55,pch=19, col="blue")
points(x=16,y=1.45,pch=19, col="#7a0177")
points(x=16,y=1.35,pch=19, col="red")
text(x=16, y=1.55, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=16, y=1.45, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=16, y=1.35, labels=expression(Low~N[e]),pos=4, cex=.8)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
abline(v=7.5, lty=2)
text(x=4, y=50, labels="Polyphaga")
text(x=10, y=50, labels="Adephaga")
par(xpd=TRUE)
points(x=16,y=50,pch=19, col="blue")
points(x=16,y=47,pch=19, col="#7a0177")
points(x=16,y=44,pch=19, col="red")
text(x=16, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=16, y=47, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=16, y=44, labels=expression(Low~N[e]),pos=4, cex=.8)
lines(x=c(7.5,7.5), y=c(0,50), lty=2)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
lines(x=c(7.5,7.5), y=c(0,50), lty=2)
text(x=4, y=50, labels="Polyphaga")
text(x=10, y=50, labels="Adephaga")
par(xpd=TRUE)
points(x=16,y=50,pch=19, col="blue")
points(x=16,y=47,pch=19, col="#7a0177")
points(x=16,y=44,pch=19, col="red")
text(x=16, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=16, y=47, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=16, y=44, labels=expression(Low~N[e]),pos=4, cex=.8)
points(x=11.5,y=52,pch=19, col="red")
points(x=11.5,y=-1,pch=19, col="red")
points(x=11.5,y=-2,pch=19, col="red")
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
lines(x=c(7.5,7.5), y=c(0,50), lty=2)
text(x=4, y=48, labels="Polyphaga")
text(x=10, y=48, labels="Adephaga")
par(xpd=TRUE)
points(x=16,y=50,pch=19, col="blue")
points(x=16,y=47,pch=19, col="#7a0177")
points(x=16,y=44,pch=19, col="red")
points(x=11.5,y=52,pch=19, col="white")
points(x=11.5,y=-2,pch=19, col="white")
text(x=16, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=16, y=47, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=16, y=44, labels=expression(Low~N[e]),pos=4, cex=.8)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
axis.break(axis=1,breakpos=11.5,style="slash")
help(axis.break)
axis.break(axis=3,breakpos=11.5,style="slash")
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
axis.break(axis=1,breakpos=11.5,style="slash")
axis.break(axis=3,breakpos=11.5,style="slash")
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
lines(x=c(7.5,7.5), y=c(0,50), lty=2)
text(x=4, y=48, labels="Polyphaga")
text(x=10, y=48, labels="Adephaga")
par(xpd=TRUE)
points(x=16,y=50,pch=19, col="blue")
points(x=16,y=47,pch=19, col="#7a0177")
points(x=16,y=44,pch=19, col="red")
text(x=16, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=16, y=47, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=16, y=44, labels=expression(Low~N[e]),pos=4, cex=.8)
text(x=14, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
plot(x=1:12, y=gen.means[gen.order], ylim=c(0,3), xaxt='n',xlab='',
col=cols[cats], pch=19, xlim=c(1,12), ylab="Rate of Karyotype Evolution")
for(i in 1:11){
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
}
axis.break(axis=1,breakpos=11.5,style="slash")
axis.break(axis=3,breakpos=11.5,style="slash")
par(new=TRUE)
plot(x=12, y=gen.means[2], xlim=c(1,12), ylim=c(0,50), col="red",
xaxt="n",yaxt="n",xlab="",ylab="", pch=19)
axis(4)
axis(side=1, lwd=.1, at=1:12, labels=names(gen.means[gen.order]), las=2, cex.axis=.8, tck=0)
i <- 12
#vertical lines
lines(x=rep(i, 2), y=c(gen.highs[gen.order][i], gen.lows[gen.order][i]))
#high caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.highs[gen.order][i], 2)))
#low caps
lines(x=c(i-.1, i+.1), y=c(rep(gen.lows[gen.order][i], 2)))
lines(x=c(7.5,7.5), y=c(0,50), lty=2)
text(x=4, y=48, labels="Polyphaga", cex=.8)
text(x=10, y=48, labels="Adephaga", cex=.8)
par(xpd=TRUE)
points(x=15,y=50,pch=19, col="blue")
points(x=15,y=47,pch=19, col="#7a0177")
points(x=15,y=44,pch=19, col="red")
text(x=15, y=50, labels=expression(High~N[e]),pos=4, cex=.8)
text(x=15, y=47, labels=expression(Medium~N[e]),pos=4, cex=.8)
text(x=15, y=44, labels=expression(Low~N[e]),pos=4, cex=.8)
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry")
# Carabidae analysis
data <- read.csv("bm.rates.csv", as.is=T, header=T)
1-pchisq((2*(507.4481-465.9293)), 1)
boxplot(data[,c("wingless", "winged")],
outline=F, col="gray",
names=c("wingless", "winged"), ylab="Rate of Karyotype Evolution")
#SE of winged 0.08183
sd(data[,2])/sqrt(nrow(data))
#SE of wingless 0.4132
sd(data[,3])/sqrt(nrow(data))
# Genera analysis
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/not-cherry/genera.analysis/all.genera")
data.poly <- read.csv("poly.csv", as.is=T, header=T)
data.ade <- read.csv("ade.csv", as.is=T, header=T)
boxplot(data.poly[,2:4],
outline=F, col="gray",
names=c("low","medium", "high"), ylab="Rate of Karyotype Evolution")
boxplot(data.ade[,2:4],
outline=F, col="gray",
names=c("Low","Medium", "High"), ylab="Rate of Karyotype Evolution")
boxplot(data.ade2[,2:4],
outline=F, col="gray",
names=c("low","medium", "high"), ylab="Rate of Karyotype Evolution")
setwd("~/Desktop/Dropbox/papers/chrom.num/data and analysis/analyses/chrom.evol")
data <- read.csv("final.params3.csv", as.is=T)[,c(1,3:23)]
# lets make a table for our combined results
results <- data
#lets convert the sd in data.ph.u to CI values
results[3:4,2:22] <- data[3:4,2:22]/sqrt(20-1)*1.96
results[5:6,2:22] <- data[5:6,2:22]/sqrt(100-1)*1.96
foo <- results[1:2,1:21]
foo <- colMeans(foo[,2:21])
bar <- order(foo, decreasing=T)
bar <- bar+1
results <- results[,c(1,bar)]
results <- results[,c(1,3:22)]
nums <- ncol(results)
par(mar=c(4,6,1,1))
plot(0,0, col="white", xlim=c(0,.9), ylim=c(.5,{nums-.5}), yaxt="n",
ylab="", xlab="", cex.axis=.6,main="",cex.lab=.8)
axis(side=2,at=1:{nums-1}+.15, labels=colnames(results)[2:nums], las=2, cex.axis=.6, tck=0)
axis(side=1,at=.35, line=1,labels="Transition Rate", las=1, cex.axis=.8, tck=0)
